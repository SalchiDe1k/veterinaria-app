# Usa una imagen oficial de Node.js como base
FROM node:18-alpine AS build

# Establece el directorio de trabajo en el contenedor
WORKDIR /app

# Copia los archivos de dependencias primero para aprovechar la caché de Docker
COPY package*.json ./

# Instala todas las dependencias
RUN npm install 

# Copia el código fuente después de instalar las dependencias
COPY . .

# Construye la aplicación (si aplica, por ejemplo, en React, Vue o Next.js)
RUN npm run build

# Imagen final optimizada para producción
FROM node:18-alpine

WORKDIR /app

# Copia solo los archivos necesarios desde la imagen de compilación
COPY --from=build /app/package*.json ./
COPY --from=build /app/dist ./dist

# Instala solo las dependencias de producción
RUN npm install --only=production

# Expone el puerto en el que se ejecuta la aplicación
EXPOSE 5000

CMD [ "node", "dist/backend/app.js" ]